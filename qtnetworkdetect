int GetHttpRequest(QString url, QString method, QString postdata, QString& response,
                       QNetworkProxy proxy=QNetworkProxy(QNetworkProxy::NoProxy), int timeout=5)
{
    QNetworkAccessManager manager;
    QNetworkReply* reply;
    QNetworkRequest request;
    QTimer timer;
    bool istimeout = false;

    timer.setSingleShot(true);
    manager.setProxy(proxy);
    request.setUrl(QUrl(url));
    reply = manager.get(request);

    QEventLoop eventLoop;
    QObject::connect(&timer, &QTimer::timeout, &eventLoop, [&istimeout]() {
        istimeout = true;
    });
    QObject::connect(&timer, &QTimer::timeout, &eventLoop, &QEventLoop::quit);
    QObject::connect(reply, &QNetworkReply::finished, &eventLoop, &QEventLoop::quit);
    QObject::connect(reply, &QNetworkReply::metaDataChanged, &eventLoop, &QEventLoop::quit);
    QObject::connect(reply, &QNetworkReply::encrypted, &eventLoop, &QEventLoop::quit);
    QObject::connect(reply, &QNetworkReply::redirected, &eventLoop, &QEventLoop::quit);
    eventLoop.exec();

    if (reply->error() != QNetworkReply::NoError)
    {
        return reply->error(); // 0~500
    }
    if (timeout)
    {
        return 10000; //
    }
    response = QString::fromUtf8(reply->readAll());
    eventLoop.deleteLater();
    reply->deleteLater();
    return QNetworkReply::NoError;
}
